{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gul4b1\\\\Desktop\\\\cv\\\\image-password-vault\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { hashData, encryptData, decryptData } from './crypto/crypto';\nimport UploadSection from './components/UploadSection';\nimport MasterPasswordModal from './components/MasterPasswordModal';\nimport AddPasswordForm from './components/AddPasswordForm';\nimport PasswordList from './components/PasswordList';\nimport EditPasswordModal from './components/EditPasswordModal';\nimport Loader from './components/Loader';\nimport AlertBox from './components/AlertBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5001/api/vault';\nfunction App() {\n  _s();\n  const [isVaultOpen, setIsVaultOpen] = useState(false);\n  const [vaultData, setVaultData] = useState([]);\n  const [currentImageHash, setCurrentImageHash] = useState(null);\n  const [currentMasterPassword, setCurrentMasterPassword] = useState(null);\n  const [modal, setModal] = useState({\n    isOpen: false,\n    type: '',\n    data: null\n  });\n  const [loading, setLoading] = useState({\n    isActive: false,\n    text: ''\n  });\n  const [alert, setAlert] = useState({\n    isVisible: false,\n    message: '',\n    isError: false\n  });\n  const showAlert = (message, isError = true) => {\n    setAlert({\n      isVisible: true,\n      message,\n      isError\n    });\n    setTimeout(() => setAlert({\n      isVisible: false,\n      message: '',\n      isError: false\n    }), 3000);\n  };\n\n  // --- API Functions (same as before, unchanged) ---\n  const handleImageUpload = async file => {\n    if (!file) return;\n    setLoading({\n      isActive: true,\n      text: 'Analyzing image...'\n    });\n    try {\n      const buffer = await file.arrayBuffer();\n      const imageHash = await hashData(buffer);\n      setCurrentImageHash(imageHash);\n      const res = await axios.get(`${API_URL}/${imageHash}`);\n      if (res.data.exists) {\n        setModal({\n          isOpen: true,\n          type: 'unlock'\n        });\n      } else {\n        setModal({\n          isOpen: true,\n          type: 'create'\n        });\n      }\n    } catch (error) {\n      showAlert('Could not connect to the server.');\n      console.error(error);\n    } finally {\n      setLoading({\n        isActive: false,\n        text: ''\n      });\n    }\n  };\n  const handleMasterPasswordSubmit = async password => {\n    if (modal.type === 'create') {\n      if (password.length < 8) {\n        showAlert(\"Password must be at least 8 characters long.\");\n        return;\n      }\n      setLoading({\n        isActive: true,\n        text: 'Creating vault...'\n      });\n      try {\n        const {\n          encryptedPackage\n        } = await encryptData([], password);\n        await axios.post(`${API_URL}/create`, {\n          imageHash: currentImageHash,\n          masterPassword: password,\n          encryptedData: encryptedPackage.encryptedData,\n          salt: encryptedPackage.salt,\n          iv: encryptedPackage.iv\n        });\n        setCurrentMasterPassword(password);\n        setVaultData([]);\n        setIsVaultOpen(true);\n        setModal({\n          isOpen: false,\n          type: ''\n        });\n        showAlert('Vault created successfully!', false);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to create vault on the server.';\n        showAlert(message);\n      } finally {\n        setLoading({\n          isActive: false,\n          text: ''\n        });\n      }\n    }\n    if (modal.type === 'unlock') {\n      setLoading({\n        isActive: true,\n        text: 'Unlocking vault...'\n      });\n      try {\n        const res = await axios.post(`${API_URL}/unlock`, {\n          imageHash: currentImageHash,\n          masterPassword: password\n        });\n        const decrypted = await decryptData(res.data, password);\n        if (decrypted) {\n          setCurrentMasterPassword(password);\n          setVaultData(decrypted);\n          setIsVaultOpen(true);\n          setModal({\n            isOpen: false,\n            type: ''\n          });\n          showAlert('Vault unlocked!', false);\n        } else {\n          showAlert('Decryption failed. Incorrect password or corrupt data.');\n        }\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to unlock vault.';\n        showAlert(message);\n      } finally {\n        setLoading({\n          isActive: false,\n          text: ''\n        });\n      }\n    }\n  };\n  const saveVault = async newData => {\n    setLoading({\n      isActive: true,\n      text: 'Saving vault...'\n    });\n    try {\n      const {\n        encryptedPackage\n      } = await encryptData(newData, currentMasterPassword);\n      await axios.put(`${API_URL}/${currentImageHash}`, {\n        masterPassword: currentMasterPassword,\n        encryptedData: encryptedPackage.encryptedData,\n        salt: encryptedPackage.salt,\n        iv: encryptedPackage.iv\n      });\n      setVaultData(newData);\n      showAlert('Vault saved successfully!', false);\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to save the vault.';\n      showAlert(message);\n    } finally {\n      setLoading({\n        isActive: false,\n        text: ''\n      });\n    }\n  };\n  const handleAddPassword = newItem => {\n    const newData = [...vaultData, newItem];\n    saveVault(newData);\n  };\n  const handleUpdatePassword = updatedItem => {\n    const newData = vaultData.map((item, index) => index === modal.data.index ? updatedItem : item);\n    saveVault(newData);\n    setModal({\n      isOpen: false,\n      type: '',\n      data: null\n    });\n  };\n  const handleDeletePassword = indexToDelete => {\n    if (window.confirm('Are you sure you want to delete this entry?')) {\n      const newData = vaultData.filter((_, index) => index !== indexToDelete);\n      saveVault(newData);\n    }\n  };\n  const lockVault = () => {\n    setIsVaultOpen(false);\n    setVaultData([]);\n    setCurrentImageHash(null);\n    setCurrentMasterPassword(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black text-white flex items-center justify-center min-h-screen font-sans transition-all duration-500\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-2xl mx-auto p-6 md:p-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-[#111] rounded-2xl shadow-xl p-10 transition-all duration-500 hover:shadow-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"text-center mb-10 animate-fade-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl md:text-5xl font-bold text-white tracking-tight\",\n            children: \"ImageGuard Vault\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 mt-3 text-lg\",\n            children: \"Minimal. Secure. Yours.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), !isVaultOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-slide-up\",\n          children: /*#__PURE__*/_jsxDEV(UploadSection, {\n            onImageUpload: handleImageUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-fade-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold text-white\",\n              children: \"Password Vault\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: lockVault,\n              className: \"border border-white text-white px-4 py-2 rounded-lg hover:bg-white hover:text-black transition duration-300\",\n              children: \"Lock Vault\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AddPasswordForm, {\n            onAdd: handleAddPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(PasswordList, {\n            items: vaultData,\n            onDelete: handleDeletePassword,\n            onEdit: (index, item) => setModal({\n              isOpen: true,\n              type: 'edit',\n              data: {\n                index,\n                item\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), loading.isActive && /*#__PURE__*/_jsxDEV(Loader, {\n      text: loading.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 34\n    }, this), alert.isVisible && /*#__PURE__*/_jsxDEV(AlertBox, {\n      message: alert.message,\n      isError: alert.isError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }, this), modal.isOpen && modal.type !== 'edit' && /*#__PURE__*/_jsxDEV(MasterPasswordModal, {\n      type: modal.type,\n      onClose: () => setModal({\n        isOpen: false,\n        type: ''\n      }),\n      onSubmit: handleMasterPasswordSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }, this), modal.isOpen && modal.type === 'edit' && /*#__PURE__*/_jsxDEV(EditPasswordModal, {\n      item: modal.data.item,\n      onClose: () => setModal({\n        isOpen: false,\n        type: '',\n        data: null\n      }),\n      onSave: handleUpdatePassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"VvC6NVpe97DGVi40TN9v9wiELlQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","hashData","encryptData","decryptData","UploadSection","MasterPasswordModal","AddPasswordForm","PasswordList","EditPasswordModal","Loader","AlertBox","jsxDEV","_jsxDEV","API_URL","App","_s","isVaultOpen","setIsVaultOpen","vaultData","setVaultData","currentImageHash","setCurrentImageHash","currentMasterPassword","setCurrentMasterPassword","modal","setModal","isOpen","type","data","loading","setLoading","isActive","text","alert","setAlert","isVisible","message","isError","showAlert","setTimeout","handleImageUpload","file","buffer","arrayBuffer","imageHash","res","get","exists","error","console","handleMasterPasswordSubmit","password","length","encryptedPackage","post","masterPassword","encryptedData","salt","iv","_error$response","_error$response$data","response","decrypted","_error$response2","_error$response2$data","saveVault","newData","put","_error$response3","_error$response3$data","handleAddPassword","newItem","handleUpdatePassword","updatedItem","map","item","index","handleDeletePassword","indexToDelete","window","confirm","filter","_","lockVault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onImageUpload","onClick","onAdd","items","onDelete","onEdit","onClose","onSubmit","onSave","_c","$RefreshReg$"],"sources":["C:/Users/gul4b1/Desktop/cv/image-password-vault/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { hashData, encryptData, decryptData } from './crypto/crypto';\nimport UploadSection from './components/UploadSection';\nimport MasterPasswordModal from './components/MasterPasswordModal';\nimport AddPasswordForm from './components/AddPasswordForm';\nimport PasswordList from './components/PasswordList';\nimport EditPasswordModal from './components/EditPasswordModal';\nimport Loader from './components/Loader';\nimport AlertBox from './components/AlertBox';\n\nconst API_URL = 'http://localhost:5001/api/vault';\n\nfunction App() {\n    const [isVaultOpen, setIsVaultOpen] = useState(false);\n    const [vaultData, setVaultData] = useState([]);\n    const [currentImageHash, setCurrentImageHash] = useState(null);\n    const [currentMasterPassword, setCurrentMasterPassword] = useState(null);\n\n    const [modal, setModal] = useState({ isOpen: false, type: '', data: null });\n    const [loading, setLoading] = useState({ isActive: false, text: '' });\n    const [alert, setAlert] = useState({ isVisible: false, message: '', isError: false });\n\n    const showAlert = (message, isError = true) => {\n        setAlert({ isVisible: true, message, isError });\n        setTimeout(() => setAlert({ isVisible: false, message: '', isError: false }), 3000);\n    };\n\n    // --- API Functions (same as before, unchanged) ---\n    const handleImageUpload = async (file) => {\n        if (!file) return;\n        setLoading({ isActive: true, text: 'Analyzing image...' });\n        try {\n            const buffer = await file.arrayBuffer();\n            const imageHash = await hashData(buffer);\n            setCurrentImageHash(imageHash);\n\n            const res = await axios.get(`${API_URL}/${imageHash}`);\n            if (res.data.exists) {\n                setModal({ isOpen: true, type: 'unlock' });\n            } else {\n                setModal({ isOpen: true, type: 'create' });\n            }\n        } catch (error) {\n            showAlert('Could not connect to the server.');\n            console.error(error);\n        } finally {\n            setLoading({ isActive: false, text: '' });\n        }\n    };\n\n    const handleMasterPasswordSubmit = async (password) => {\n        if (modal.type === 'create') {\n            if (password.length < 8) {\n                showAlert(\"Password must be at least 8 characters long.\");\n                return;\n            }\n            setLoading({ isActive: true, text: 'Creating vault...' });\n            try {\n                const { encryptedPackage } = await encryptData([], password);\n                \n                await axios.post(`${API_URL}/create`, {\n                    imageHash: currentImageHash,\n                    masterPassword: password,\n                    encryptedData: encryptedPackage.encryptedData,\n                    salt: encryptedPackage.salt,\n                    iv: encryptedPackage.iv,\n                });\n\n                setCurrentMasterPassword(password);\n                setVaultData([]);\n                setIsVaultOpen(true);\n                setModal({ isOpen: false, type: '' });\n                showAlert('Vault created successfully!', false);\n            } catch (error) {\n                const message = error.response?.data?.message || 'Failed to create vault on the server.';\n                showAlert(message);\n            } finally {\n                setLoading({ isActive: false, text: '' });\n            }\n        }\n\n        if (modal.type === 'unlock') {\n            setLoading({ isActive: true, text: 'Unlocking vault...' });\n            try {\n                const res = await axios.post(`${API_URL}/unlock`, {\n                    imageHash: currentImageHash,\n                    masterPassword: password,\n                });\n\n                const decrypted = await decryptData(res.data, password);\n                if (decrypted) {\n                    setCurrentMasterPassword(password);\n                    setVaultData(decrypted);\n                    setIsVaultOpen(true);\n                    setModal({ isOpen: false, type: '' });\n                    showAlert('Vault unlocked!', false);\n                } else {\n                    showAlert('Decryption failed. Incorrect password or corrupt data.');\n                }\n            } catch (error) {\n                const message = error.response?.data?.message || 'Failed to unlock vault.';\n                showAlert(message);\n            } finally {\n                setLoading({ isActive: false, text: '' });\n            }\n        }\n    };\n    \n    const saveVault = async (newData) => {\n        setLoading({ isActive: true, text: 'Saving vault...' });\n        try {\n            const { encryptedPackage } = await encryptData(newData, currentMasterPassword);\n            await axios.put(`${API_URL}/${currentImageHash}`, {\n                masterPassword: currentMasterPassword,\n                encryptedData: encryptedPackage.encryptedData,\n                salt: encryptedPackage.salt,\n                iv: encryptedPackage.iv\n            });\n            setVaultData(newData);\n            showAlert('Vault saved successfully!', false);\n        } catch (error) {\n            const message = error.response?.data?.message || 'Failed to save the vault.';\n            showAlert(message);\n        } finally {\n            setLoading({ isActive: false, text: '' });\n        }\n    };\n\n    const handleAddPassword = (newItem) => {\n        const newData = [...vaultData, newItem];\n        saveVault(newData);\n    };\n\n    const handleUpdatePassword = (updatedItem) => {\n        const newData = vaultData.map((item, index) =>\n            index === modal.data.index ? updatedItem : item\n        );\n        saveVault(newData);\n        setModal({ isOpen: false, type: '', data: null });\n    };\n\n    const handleDeletePassword = (indexToDelete) => {\n        if (window.confirm('Are you sure you want to delete this entry?')) {\n            const newData = vaultData.filter((_, index) => index !== indexToDelete);\n            saveVault(newData);\n        }\n    };\n    \n    const lockVault = () => {\n        setIsVaultOpen(false);\n        setVaultData([]);\n        setCurrentImageHash(null);\n        setCurrentMasterPassword(null);\n    };\n\n    return (\n        <div className=\"bg-black text-white flex items-center justify-center min-h-screen font-sans transition-all duration-500\">\n            <div className=\"w-full max-w-2xl mx-auto p-6 md:p-10\">\n                <div className=\"bg-[#111] rounded-2xl shadow-xl p-10 transition-all duration-500 hover:shadow-2xl\">\n                    <header className=\"text-center mb-10 animate-fade-in\">\n                        <h1 className=\"text-4xl md:text-5xl font-bold text-white tracking-tight\">\n                            ImageGuard Vault\n                        </h1>\n                        <p className=\"text-gray-400 mt-3 text-lg\">\n                            Minimal. Secure. Yours.\n                        </p>\n                    </header>\n\n                    {!isVaultOpen ? (\n                        <div className=\"animate-slide-up\">\n                            <UploadSection onImageUpload={handleImageUpload} />\n                        </div>\n                    ) : (\n                        <div className=\"animate-fade-in\">\n                            <div className=\"flex justify-between items-center mb-6\">\n                                <h2 className=\"text-2xl font-semibold text-white\">Password Vault</h2>\n                                <button \n                                    onClick={lockVault} \n                                    className=\"border border-white text-white px-4 py-2 rounded-lg hover:bg-white hover:text-black transition duration-300\"\n                                >\n                                    Lock Vault\n                                </button>\n                            </div>\n                            <AddPasswordForm onAdd={handleAddPassword} />\n                            <PasswordList\n                                items={vaultData}\n                                onDelete={handleDeletePassword}\n                                onEdit={(index, item) => setModal({ isOpen: true, type: 'edit', data: { index, item } })}\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {loading.isActive && <Loader text={loading.text} />}\n            {alert.isVisible && <AlertBox message={alert.message} isError={alert.isError} />}\n\n            {modal.isOpen && modal.type !== 'edit' && (\n                <MasterPasswordModal\n                    type={modal.type}\n                    onClose={() => setModal({ isOpen: false, type: '' })}\n                    onSubmit={handleMasterPasswordSubmit}\n                />\n            )}\n            \n            {modal.isOpen && modal.type === 'edit' && (\n                <EditPasswordModal\n                    item={modal.data.item}\n                    onClose={() => setModal({ isOpen: false, type: '', data: null })}\n                    onSave={handleUpdatePassword}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}